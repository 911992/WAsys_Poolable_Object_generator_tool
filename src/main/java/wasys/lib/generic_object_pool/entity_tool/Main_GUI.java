/*
 * Copyright (c) 2020, https://github.com/911992 All rights reserved.
 * License BSD 3-Clause (https://opensource.org/licenses/BSD-3-Clause)
 */

 /*
WAsys_poolable_entity_tool
File: Main_GUI.java
Created on: Jun 25, 2020 10:36:27 PM
    @author https://github.com/911992
 
History:
    0.1.1 (20200626)
        â€¢ Reorder package/class-name input elements

    initial version: 0.1(20200625)
 */
package wasys.lib.generic_object_pool.entity_tool;

import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.net.URI;
import javax.imageio.ImageIO;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.UIManager;
import wasys.lib.generic_object_pool.entity_tool.meta.WAsys_Project_Info;

/**
 *
 * @author https://github.com/911992
 */
public class Main_GUI extends javax.swing.JFrame {

    /**
     * Creates new form Main_GUI
     */
    public Main_GUI() {
        initComponents();
        try {
            this.setIconImage(ImageIO.read(this.getClass().getResource("icon0.png")));
        } catch (Exception e) {
        }
        this.getRootPane().registerKeyboardAction(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btn_generate.doClick();
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_F5, 0), JComponent.WHEN_IN_FOCUSED_WINDOW);

        this.getRootPane().registerKeyboardAction(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btn_save.doClick();
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_S, KeyEvent.CTRL_DOWN_MASK), JComponent.WHEN_IN_FOCUSED_WINDOW);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        file_chooser = new javax.swing.JFileChooser();
        scrollpane_textarea_result = new javax.swing.JScrollPane();
        textarea_result = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        btn_generate = new javax.swing.JButton();
        btn_save = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        textbox_package = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textbox_classname = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        textbox_pool_pol_stmnt = new javax.swing.JTextField();
        checkbox_default_pool_pol = new javax.swing.JCheckBox();

        file_chooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        file_chooser.setApproveButtonText("Persist");
        file_chooser.setApproveButtonToolTipText("");
        file_chooser.setCurrentDirectory(new java.io.File("C:\\Program Files\\NetBeans-11.3"));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(WAsys_Project_Info.PROJECT_NAME);
        setLocationByPlatform(true);
        setPreferredSize(new java.awt.Dimension(759, 579));
        setSize(new java.awt.Dimension(759, 579));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        textarea_result.setColumns(20);
        textarea_result.setRows(5);
        textarea_result.setTabSize(4);
        textarea_result.setNextFocusableComponent(btn_generate);
        scrollpane_textarea_result.setViewportView(textarea_result);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(scrollpane_textarea_result, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        btn_generate.setText("Generate (F5)");
        btn_generate.setNextFocusableComponent(btn_save);
        btn_generate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_generateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel1.add(btn_generate, gridBagConstraints);

        btn_save.setText("Generate And Save To File(ctrl+s)");
        btn_save.setToolTipText("");
        btn_save.setNextFocusableComponent(textbox_classname);
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel1.add(btn_save, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setBackground(javax.swing.UIManager.getDefaults().getColor("window"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel4.setFont(jLabel4.getFont().deriveFont(jLabel4.getFont().getStyle() | java.awt.Font.BOLD, jLabel4.getFont().getSize()+2));
        jLabel4.setForeground(javax.swing.UIManager.getDefaults().getColor("textHighlight"));
        jLabel4.setText(WAsys_Project_Info.PROJECT_SIGNATURE);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel2.add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        jLabel5.setText(String.format("<html><u>%s</u></html>", WAsys_Project_Info.PROJECT_REPO)
        );
        jLabel5.setToolTipText("Click to open the link in default browser");
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel2.add(jLabel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        jPanel2.add(jSeparator1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanel2, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("package:");
        jLabel1.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(jLabel1, gridBagConstraints);

        textbox_package.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        textbox_package.setNextFocusableComponent(textbox_pool_pol_stmnt);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(textbox_package, gridBagConstraints);

        jLabel2.setText("class-name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(jLabel2, gridBagConstraints);

        textbox_classname.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        textbox_classname.setText("My_Class");
        textbox_classname.setNextFocusableComponent(textbox_package);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(textbox_classname, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanel3, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("Pool Policy Statement:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel4.add(jLabel3, gridBagConstraints);

        textbox_pool_pol_stmnt.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        textbox_pool_pol_stmnt.setText(Type_Generator.DEFAULT_POL_POLICY_STATEMENT);
        textbox_pool_pol_stmnt.setEnabled(false);
        textbox_pool_pol_stmnt.setNextFocusableComponent(checkbox_default_pool_pol);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel4.add(textbox_pool_pol_stmnt, gridBagConstraints);

        checkbox_default_pool_pol.setSelected(true);
        checkbox_default_pool_pol.setText("Use Default Pool Policy");
        checkbox_default_pool_pol.setToolTipText(Type_Generator.DEFAULT_POL_POLICY_STATEMENT
        );
        checkbox_default_pool_pol.setNextFocusableComponent(textarea_result);
        checkbox_default_pool_pol.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                checkbox_default_pool_polStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        jPanel4.add(checkbox_default_pool_pol, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanel4, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        int _open = JOptionPane.showConfirmDialog(this, "Open URL lin on default browser?", "Confirmation", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(_open!=JOptionPane.YES_OPTION){
            return;
        }
        try {
            Desktop.getDesktop().browse(new URI(WAsys_Project_Info.PROJECT_REPO));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jLabel5MouseClicked

    private void btn_generateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_generateActionPerformed
        generate_entity();
    }//GEN-LAST:event_btn_generateActionPerformed

    private void checkbox_default_pool_polStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_checkbox_default_pool_polStateChanged
        textbox_pool_pol_stmnt.setEnabled(!checkbox_default_pool_pol.isSelected());
    }//GEN-LAST:event_checkbox_default_pool_polStateChanged

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        save_to_file();
    }//GEN-LAST:event_btn_saveActionPerformed

    private void save_to_file() {
        String _type_name = textbox_classname.getText();
        File _f = new File(String.format("%s.java", _type_name));
        file_chooser.setSelectedFile(_f);
        int _res = file_chooser.showOpenDialog(this);
        if (_res != JFileChooser.APPROVE_OPTION) {
            return;
        }
        File _file = file_chooser.getSelectedFile();
        if (_file.exists()) {
            int _override = JOptionPane.showConfirmDialog(this, String.format("File \"%s\" exist, override?", _file.getName()), "Override Existing File?", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (_override != JOptionPane.YES_OPTION) {
                return;
            }
        }
        try(FileOutputStream _fous=new FileOutputStream(_file)){
            ByteArrayOutputStream _gen = generate_entity();
            _gen.writeTo(_fous);
            _fous.flush();
        }catch(Exception wt){
            wt.printStackTrace();
            JOptionPane.showMessageDialog(this, String.format("Could not write to %s, error: %s", _file.getName(),wt.getMessage()), "File Write Fail! (stack-call on STDOUT)", JOptionPane.ERROR_MESSAGE);
        }
    }

    private ByteArrayOutputStream generate_entity() {
        ByteArrayOutputStream _bos = new ByteArrayOutputStream(2662);
        String _type_name = textbox_classname.getText();
        String _package = textbox_package.getText();
        String _pol_statemen;
        if (checkbox_default_pool_pol.isSelected()) {
            _pol_statemen = Type_Generator.DEFAULT_POL_POLICY_STATEMENT;
        } else {
            _pol_statemen = textbox_pool_pol_stmnt.getText();
        }
        Type_Generator.generate_type(_package, _type_name, _pol_statemen, _bos);
        String _res = new String(_bos.toByteArray());
        textarea_result.setText(_res);
        textarea_result.setCaretPosition(0);
        return _bos;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main_GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_generate;
    private javax.swing.JButton btn_save;
    private javax.swing.JCheckBox checkbox_default_pool_pol;
    private javax.swing.JFileChooser file_chooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JScrollPane scrollpane_textarea_result;
    private javax.swing.JTextArea textarea_result;
    private javax.swing.JTextField textbox_classname;
    private javax.swing.JTextField textbox_package;
    private javax.swing.JTextField textbox_pool_pol_stmnt;
    // End of variables declaration//GEN-END:variables

}
